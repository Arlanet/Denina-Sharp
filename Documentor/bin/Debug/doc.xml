<?xml version="1.0" encoding="utf-16"?><root><filterCategory><FiltersAttribute><Category>SQL</Category><Description>For working with SQL databases.</Description></FiltersAttribute><filter><FilterAttribute><Name>GetXml</Name></FilterAttribute><arguments /></filter></filterCategory><filterCategory><FiltersAttribute><Category>File</Category><Description>Working with files on the file system.</Description></FiltersAttribute><filter><FilterAttribute><Name>Read</Name><Description>Reads the content of a file on the file system.</Description></FilterAttribute><arguments><ArgumentMetaAttribute><Ordinal>1</Ordinal><Name>Path</Name><Required>true</Required><Description>The path to the file, relative to AppDomain.CurrentDomain.BaseDirectory. This value should not start with a leading slash as Path.Combine will interpret that as "root."</Description></ArgumentMetaAttribute></arguments></filter></filterCategory><filterCategory><FiltersAttribute><Category>HTML</Category><Description>Creating and manipulating HTML strings.</Description></FiltersAttribute><filter><FilterAttribute><Name>Extract</Name><Description>Extracts an element from an HTML string. (Relies on the HtmlAgilityPack.dll assembly, which must be available.)</Description></FilterAttribute><arguments><ArgumentMetaAttribute><Ordinal>1</Ordinal><Name>Path</Name><Required>true</Required><Description>The XPath(-ish) to the element, based on HtmlAgilityPack's language standard.</Description></ArgumentMetaAttribute></arguments></filter><filter><FilterAttribute><Name>Wrap</Name><Description>Wraps the input string in a specified HTML tag with optional class and/or ID.</Description></FilterAttribute><arguments><ArgumentMetaAttribute><Ordinal>2</Ordinal><Name>Class</Name><Required>false</Required><Description>If provided, the tag will use this as a "class" attribute.</Description></ArgumentMetaAttribute><ArgumentMetaAttribute><Ordinal>3</Ordinal><Name>ID</Name><Required>false</Required><Description>If provided, the tag will use this as an "id" attribute.</Description></ArgumentMetaAttribute><ArgumentMetaAttribute><Ordinal>1</Ordinal><Name>Tag Name</Name><Required>true</Required><Description>The name of the HTML tag in which to wrap the content.</Description></ArgumentMetaAttribute></arguments></filter></filterCategory><filterCategory><FiltersAttribute><Category>HTTP</Category><Description>Working with resources over HTTP.</Description></FiltersAttribute><filter><FilterAttribute><Name>Get</Name><Description>Makes an HTTP GET request and returns the result.</Description></FilterAttribute><arguments><ArgumentMetaAttribute><Ordinal>1</Ordinal><Name>URL</Name><Required>false</Required><Description>The URL to request. If not provided, the input string is assumed to be a URL.</Description></ArgumentMetaAttribute></arguments></filter></filterCategory><filterCategory><FiltersAttribute><Category>JSON</Category><Description>Working with JSON data.</Description></FiltersAttribute><filter><FilterAttribute><Name>ExtractFromJson</Name><Description>Retieves the valud at a defined "path" into the JSON object.</Description></FilterAttribute><arguments><ArgumentMetaAttribute><Ordinal>1</Ordinal><Name>Path</Name><Required>true</Required><Description>A dot-delimited representation of the path into the object. Each property is defined by a segment. Numeric values prepended by a tilde ("~1") are interpreted as the index of an array. Example: "person.~2.name.first".</Description></ArgumentMetaAttribute></arguments></filter></filterCategory><filterCategory><FiltersAttribute><Category>Text</Category><Description>For working with text.</Description></FiltersAttribute><filter><FilterAttribute><Name>Append</Name><Description>Appends a string to the input string.</Description></FilterAttribute><arguments><ArgumentMetaAttribute><Ordinal>1</Ordinal><Name>Suffix</Name><Required>true</Required><Description>The string to append to the input string.</Description></ArgumentMetaAttribute></arguments></filter><filter><FilterAttribute><Name>Prepend</Name><Description>Prepends a string to the input string.</Description></FilterAttribute><arguments><ArgumentMetaAttribute><Ordinal>1</Ordinal><Name>Prefix</Name><Required>true</Required><Description>The string to prepend to the input string.</Description></ArgumentMetaAttribute></arguments></filter><filter><FilterAttribute><Name>Replace</Name><Description>Finds and replaces one string with another.</Description></FilterAttribute><arguments><ArgumentMetaAttribute><Ordinal>1</Ordinal><Name>Old String</Name><Required>true</Required><Description>The string to be replaced.</Description></ArgumentMetaAttribute><ArgumentMetaAttribute><Ordinal>2</Ordinal><Name>New String</Name><Required>false</Required><Description>The new string. If this argument is not provided, String.Empty will be used (so, the Old String will simply be removed.)</Description></ArgumentMetaAttribute></arguments></filter><filter><FilterAttribute><Name>ReplaceAll</Name><Description>Completely replaces the input string.</Description></FilterAttribute><arguments><ArgumentMetaAttribute><Ordinal>1</Ordinal><Name>New String</Name><Required>false</Required><Description>The new string. After this filter executes, the active text will be set to this value. If no argument is provided, String.Empty is used, effectively clearing the active text.</Description></ArgumentMetaAttribute></arguments></filter><filter><FilterAttribute><Name>Format</Name><Description>Performs simple token replacement of variables and the active text.</Description></FilterAttribute><arguments><ArgumentMetaAttribute><Ordinal>1</Ordinal><Name>Format String</Name><Required>true</Required><Description>A format string suitable for usage in String.Format. The input string will replace the {0} token. Variable values will replace {variableName} tokens.</Description></ArgumentMetaAttribute></arguments></filter><filter><FilterAttribute><Name>Trim</Name><Description>Trims whitespace from the ends of the input string.</Description></FilterAttribute><arguments /></filter></filterCategory><filterCategory><FiltersAttribute><Category>Url</Category><Description>Working with URLs.</Description></FiltersAttribute><filter><FilterAttribute><Name>AddQuerystringArg</Name><Description>Adds a querystring argument (key/value pair) to a URL.</Description></FilterAttribute><arguments><ArgumentMetaAttribute><Ordinal>1</Ordinal><Name>Key</Name><Required>true</Required><Description>The key for the pair.</Description></ArgumentMetaAttribute><ArgumentMetaAttribute><Ordinal>1</Ordinal><Name>Value</Name><Required>true</Required><Description>The value for the pair.</Description></ArgumentMetaAttribute></arguments></filter></filterCategory><filterCategory><FiltersAttribute><Category>XML</Category><Description>Working with XML strings.</Description></FiltersAttribute><filter><FilterAttribute><Name>Extract</Name><Description>Extracts a single value from an XML document parsed from the input string.</Description></FilterAttribute><arguments><ArgumentMetaAttribute><Ordinal>1</Ordinal><Name>XPath</Name><Required>true</Required><Description>The XPath identifying the desired XML node. The InnerText of the resulting node will be returned.</Description></ArgumentMetaAttribute></arguments></filter><filter><FilterAttribute><Name>TransformXml</Name><Description>Transforms an XML document against an XSL stylesheet</Description></FilterAttribute><arguments><ArgumentMetaAttribute><Ordinal>2</Ordinal><Name>XML</Name><Required>false</Required><Description>The XML to transform.  If not provided, the XML is formed from the active text.</Description></ArgumentMetaAttribute><ArgumentMetaAttribute><Ordinal>1</Ordinal><Name>XSLT</Name><Required>true</Required><Description>The raw XSLT to transform the input string.</Description></ArgumentMetaAttribute></arguments></filter><filter><FilterAttribute><Name>FormatNodes</Name></FilterAttribute><arguments /></filter></filterCategory><filterCategory><FiltersAttribute><Category>Core</Category><Description>For working with the pipeline and its variables.</Description></FiltersAttribute><filter><FilterAttribute><Name>Clear</Name><Description>Replaces the input text. (The same as ReplaceAll called with no arguments.)</Description></FilterAttribute><arguments /></filter><filter><FilterAttribute><Name>ReadFrom</Name><Description>Sets the active text to the contents of a variable.</Description></FilterAttribute><arguments><ArgumentMetaAttribute><Ordinal>1</Ordinal><Name>Variable Name</Name><Required>true</Required><Description>The name of the variable to be retrieved.</Description></ArgumentMetaAttribute></arguments></filter><filter><FilterAttribute><Name>WriteTo</Name><Description>Writes the active text to the named variable.</Description></FilterAttribute><arguments><ArgumentMetaAttribute><Ordinal>1</Ordinal><Name>Variable Name</Name><Required>true</Required><Description>The name of the variable to which to write the input string.</Description></ArgumentMetaAttribute></arguments></filter><filter><FilterAttribute><Name>SetVar</Name><Description>Sets the value of a variable to the value provided. Does not change the input string.</Description></FilterAttribute><arguments><ArgumentMetaAttribute><Ordinal>2</Ordinal><Name>Value</Name><Required>false</Required><Description>The desired value. If not provided, the variable is set to an empty string (same as InitVar).</Description></ArgumentMetaAttribute><ArgumentMetaAttribute><Ordinal>1</Ordinal><Name>Variable Name</Name><Required>true</Required><Description>The name of the variable to set.</Description></ArgumentMetaAttribute></arguments></filter><filter><FilterAttribute><Name>InitVar</Name><Description>Sets the value of a variable to an empty string. The variable can now be referenced without error.</Description></FilterAttribute><arguments><ArgumentMetaAttribute><Ordinal>1</Ordinal><Name>Variable Name</Name><Required>true</Required><Description>The name of the variable to set. Multiple variables can be specified. All will be initialized.</Description></ArgumentMetaAttribute></arguments></filter><filter><FilterAttribute><Name>Now</Name><Description>Returns the current date and time, formatted by an optional format string.</Description></FilterAttribute><arguments><ArgumentMetaAttribute><Ordinal>1</Ordinal><Name>Format String</Name><Required>false</Required><Description>The C# time format string with which to format the results.</Description></ArgumentMetaAttribute></arguments></filter><filter><FilterAttribute><Name>ConcatVar</Name><Description>Concatenates the value of two variables</Description></FilterAttribute><arguments /></filter></filterCategory></root>